<%= simple_form_for( [@low_level_requirement.item, @low_level_requirement], validate: true, html: { class: 'form-horizontal' }) do |f| %>
  <%= f.error_notification %>
  <input name='message' id='message' type='hidden' style='color: #FF0000' readonly />

  <div class="form-inputs">
    <%= f.input :reqid, required: true, label: 'Requirement Number', :input_html => { :readonly => !current_user.fulladmin } %>
    <%= f.input :full_id_prefix, :as => :hidden, input_html: { value: @item.low_level_requirements_prefix }  %>
    <%= f.input :full_id, required: true, label: @item.get_item_title(:low_level, :singular_shortened), as: :string %>
    <%= f.input :category, as: :string %>
    <%= f.input :module_description,  :as => :hidden %>
    <%= f.input :description, required: true, as: :summernote %>
    <%= f.input :verification_method, label: 'Verification Method', collection: Constant.where(name: 'verification_method'), :label_method => :label, :value_method => :value, include_blank: true, input_html: { multiple: true } %>
    <%= f.input :safety %>
    <%= f.input :derived, :input_html => { :onclick => 'derived_changed();' } %>
    <%= f.input :derived_justification, label: 'Derived Justification'  %>
    <%= f.input :model_file_id, collection: @pact_files, include_blank: true, label: t('misc.model_file') %> 

    <div id='file_div' style='display: none'>
      <%= f.file_field :upload_file, accept: "image/x-png,image/png,image/gif,image/jpeg,image/tiff", onchange: "file_validation('low_level_requirement_upload_file');" %>
    </div>

    <%= f.input :version, :as => :hidden %>
    <%= f.input :full_id_prefix, :as => :hidden, input_html: { value: @item.low_level_requirements_prefix }  %>
    <%= f.input :high_level_requirement_associations, :as => :hidden %>

    <% if current_user.fulladmin && @project.present? %>
      <%= f.association :item, collection: Item.where(project_id: @project.id) %>
    <% end %>
  </div>
<% end %>

<input id='link_high_level_requirements_button' type='button' value='Link <%= Item.item_type_title(@item, :high_level, :plural) %>' onclick='link_requirements();' class='btn' />

<div id="linked_high_level_requirements" style='width: 100%; display: none;'>
<%= render 'associate_high_level_requirements', low_level_requirement: @low_level_requirement  %>
</div>

<div class="form-actions">
  <input id='update_low_level_requirement' name='update_low_level_requirement' value='Save <%= Item.item_type_title(@item, :low_level, :singular) %>' type="button" onclick='validate();' class="btn btn-default" />

  <%= link_to 'Back', 'javascript:null', class: "btn", onclick: 'validateBack(1)' %>

  <% if @undo_path.present? && !session[:archives_visible].present? %>
    <%= link_to 'Undo', @undo_path, class: 'btn btn-default', title: @undo_message %>
  <% end %>

  <% if @redo_path.present? && !session[:archives_visible].present? %>
    <%= link_to 'Redo', @redo_path, class: 'btn btn-default', title: @redo_message %>
  <% end %>

  <%
      if @low_level_requirement_ids.present?
        current_index = @low_level_requirement_ids.find_index(@low_level_requirement.id)
        previous_id   = @low_level_requirement_ids[current_index - 1] if current_index > 0
        next_id       = @low_level_requirement_ids[current_index + 1] if current_index < (@low_level_requirement_ids.length - 1)
      end
   %>

  <% if previous_id.present? %>
    <% if policy(@low_level_requirement).edit? %>
      <%= link_to('Previous', edit_item_low_level_requirement_path(@item, previous_id), class: 'btn btn-default') %>
    <% else %>
      <%= link_to('Previous', item_low_level_requirement_path(@item, previous_id),      class: 'btn btn-default') %>
    <% end %>
  <% end %>

  <% if next_id.present? %>
    <% if policy(@low_level_requirement).edit? %>
      <%= link_to('Next',     edit_item_low_level_requirement_path(@item, next_id),     class: 'btn btn-default') %>
    <% else %>
      <%= link_to('Next',     item_low_level_requirement_path(@item, next_id),          class: 'btn btn-default') %>
    <% end %>
  <% end %>
</div>

<script>
  var model         = "";
  var table         = "";
  var prefix        = "";
  var parent        = "";
  var parent_table  = "";
  var parent_prefix = "";
  
  model            = "low_level_requirement";
  parent           = "high_level_requirement";
  table            = model  + 's';
  parent_table     = parent + 's';
  prefix           = model  + "_";
  parent_prefix    = parent + "_";
  id_field         = "reqid";
  numeric_id       = model + "_" + id_field;
  full_id          = model + "_full_id";
  numeric_id_index = "#" + numeric_id;

<% if controller.action_name == 'new' %>
  numeric_id_index_changed();
<% end %>

  $(numeric_id_index).change(function()
  {
    numeric_id_index_changed();
  });

  $('#low_level_requirement_model_file_id').change(function()
  {
    if ($(this).val() == -1)
      $('#file_div').show();
    else
      $('#file_div').hide();
  });

  function link_requirements()
  {
    var linkedRequirementsDiv = document.getElementById('linked_high_level_requirements');
    var linkedbutton          = document.getElementById('link_high_level_requirements_button');

    if (linkedRequirementsDiv.style.display == 'none')
    {
      linkedRequirementsDiv.style.display = 'block';
      linkedbutton.value                  = 'Hide Links';
    }
    else
    {
      linkedRequirementsDiv.style.display = 'none';
      linkedbutton.value                  = 'Link <%= Item.item_type_title(@item, :high_level, :plural) %>';
    }
  }

  function numeric_id_index_changed()
  {
    var full_id_prefix = document.getElementById('low_level_requirement_full_id_prefix').value;
    var number         = document.getElementById(numeric_id).value;
    var fullId         = document.getElementById(full_id);
    var numberString   = "";

    if (number < 10)
      numberString = "000" + number;
    else if  (number < 100)
      numberString = "00" + number;
    else if  (number < 1000)
      numberString = "0" + number;
    else
      numberString = "" + number;

    <% if controller.action_name == 'new' %>
      fullId.value = full_id_prefix + '-' + numberString;
    <% else %>
      if (fullId.value === '')
        fullId.value = full_id_prefix + '-' + numberString;
    <% end %>
  }

  function derived_changed()
  {
    var selectRequirements        = document.getElementById("select_requirements");
    var derivedJustification      = document.getElementById(prefix + "derived_justification");
    var derived                   = document.getElementById(prefix + "derived");

    if (derived.checked)
    {
      var associations            = document.getElementById(prefix+ parent_prefix + "associations");

      if (associations.value.length > 0)
      {
        if (confirm("This " + model.replace(/_/g, " ") + " is associated with one or more " + parent.replace(/_/g, " ") + "s. "                    +
                    "If you mark it as derived the current associations will be cleared. "                    +
                    "Also you will be required to fill in the derived justification before saving the form. " +
                    "Is it okay to clear the associations and require you to fill in the justification?"))
          associations.value      = '';
        else
          derived.checked         = false;
      }
    }

    if (derived.checked)
    {
      selectRequirements.disabled = true;
    }
    else
    {
      selectRequirements.disabled = false;
      derivedJustification.value  = "";
    }
  }

  function choose_requirements()
  {
    var form    = document.forms[0];
    var action  = form.action.replace("/" + table + "/", "/" + table + "/associate/");

    form.action = action;

    form.submit();
    return(true);
  }

  $(":input").keydown(function (event)
  {
      if (event.keyCode == 112)
        validate();
      else if (event.keyCode == 113)
        window.location.assign(window.location.href.replace(/\/\d+\/edit$/, ''));
  }); 

  setupChangeNotification();

  function validate()
  {
    var model_file_id        = document.getElementById(prefix + 'model_file_id');
    var upload_file          = document.getElementById(prefix + 'upload_file');
    var derivedJustification = document.getElementById(prefix + "derived_justification");
    var derived              = document.getElementById(prefix + "derived");
    var form                 = document.forms[0];
    var okay                 = validateForm();
    var messageText          = "";

    if (!okay)
      return(okay);

    if (okay && (model_file_id.value == -1) && (upload_file.value === ''))
    {
        messageText          = 'If you specify a model file as an upload then you must provide a file to upload.';
        okay                 = false;
    }

    if (okay && derived.checked)
    {
      if (derivedJustification.value.length === 0)
      {
        messageText          = "If a " + model.replace(/_/g, " ") + " is derived then you must provide a justification.";
        okay                 = false;
      }
    }

    if (okay)
    {
      submitHighLevelRequirements();
      form.submit();
    }
    else
    {
      message.value          = messageText;
      message.style.display  = "none";

      alert(messageText);
    }

    return(okay);
  }
</script>
