<%= simple_form_for( [@item.project, @item], validate:true, html: { class: 'form-horizontal' }) do |f| %>
  <%= f.error_notification %>

  <div class="form-inputs">
    <%= f.input    :name, required: true %>
    <%= f.input    :itemtype, collection: Constants::DisplayItemType.sort.map {|k,v| [v,k]} %>
    <%= f.input    :identifier,                     disabled: @baselined && !current_user.fulladmin, required: true %>
    <%= f.input    :level,                          collection: Item::AssuranceLevels %>
    <%= f.input    :high_level_requirements_prefix, disabled: @baselined && !current_user.fulladmin, label: "#{t('misc.high_level_requirement')} or #{t('misc.requirements')} Prefix" %>
    <%= f.input    :low_level_requirements_prefix,  disabled: @baselined && !current_user.fulladmin, label: "#{t('misc.low_level_requirements')} or #{t('misc.design')} Prefix" %>
    <%= f.input    :model_file_prefix,              disabled: @baselined && !current_user.fulladmin %>
    <%= f.input    :module_description_prefix,      disabled: @baselined && !current_user.fulladmin %>
    <%= f.input    :source_code_prefix,             disabled: @baselined && !current_user.fulladmin %>
    <%= f.input    :test_case_prefix,               disabled: @baselined && !current_user.fulladmin %>
    <%= f.input    :test_procedure_prefix,          disabled: @baselined && !current_user.fulladmin %>

    <input name='project_high_level_requirements_prefix' id='project_high_level_requirements_prefix' value='<%= @project.high_level_requirements_prefix %>' type='hidden' />
    <input name='project_low_level_requirements_prefix'  id='project_low_level_requirements_prefix'  value='<%= @project.low_level_requirements_prefix %>'  type='hidden' />
    <input name='project_model_file_prefix'              id='project_model_file_prefix'              value='<%= @project.model_file_prefix %>'             type='hidden' />
    <input name='project_source_code_prefix'             id='project_source_code_prefix'             value='<%= @project.source_code_prefix %>'             type='hidden' />
    <input name='project_test_case_prefix'               id='project_test_case_prefix'               value='<%= @project.test_case_prefix %>'               type='hidden' />
    <input name='project_test_procedure_prefix'          id='project_test_procedure_prefix'          value='<%= @project.test_procedure_prefix %>'          type='hidden' />

    <% if current_user.fulladmin %>
      <%= f.association :project, collection: Project.where(organization: current_user.organization) %>
    <% end %>
  </div>

  <div class="form-actions">
    <% if controller.action_name == 'new' %>
      <input id='update_item' name='update_item' value='Create <%= t('items.single_title') %>' type="button" onclick='validate();' class="btn btn-default" />
    <% else %>
      <input id='update_item' name='update_item' value='Update <%= t('items.single_title') %>' type="button" onclick='validate();' class="btn btn-default" />
    <% end %>

    <% if @item.id.present? %>
      <%= link_to 'Show', item_path(@item), class: 'btn btn-default' %>
    <% end %>

    <% if controller.action_name == 'edit' %>
      <%= link_to "New #{t('items.single_title')}", new_project_item_path(@project),  class: "btn btn-primary", style: "color:white" %>
    <% end %>

    <%= link_to 'Back', 'javascript:null', class: "btn", onclick: 'validateBack(1)' %>

    <% if @undo_path.present? && !session[:archives_visible].present? %>
      <%= link_to 'Undo', @undo_path, class: 'btn btn-default', title: @undo_message %>
    <% end %>

    <% if @redo_path.present? && !session[:archives_visible].present? %>
      <%= link_to 'Redo', @redo_path, class: 'btn btn-default', title: @redo_message %>
    <% end %>
  </div>
<% end %>

<script>
  var model                                  = "item";
  var parent                                 = "project";
  var table                                  = model         + 's';
  var parent_table                           = parent        + 's';
  var prefix                                 = model         + "_";
  var parent_prefix                          = parent        + "_";
  var identifier                             = prefix        + "identifier";
  var high_level_requirements_prefix         = prefix        + "high_level_requirements_prefix";
  var low_level_requirements_prefix          = prefix        + "low_level_requirements_prefix";
  var model_file_prefix                      = prefix        + "model_file_prefix";
  var source_code_prefix                     = prefix        + "source_code_prefix";
  var test_case_prefix                       = prefix        + "test_case_prefix";
  var test_procedure_prefix                  = prefix        + "test_procedure_prefix";
  var project_high_level_requirements_prefix = parent_prefix + "high_level_requirements_prefix";
  var project_low_level_requirements_prefix  = parent_prefix + "low_level_requirements_prefix";
  var project_model_file_prefix              = parent_prefix + "model_file_prefix";
  var project_source_code_prefix             = parent_prefix + "source_code_prefix";
  var project_test_case_prefix               = parent_prefix + "test_case_prefix";
  var project_test_procedure_prefix          = parent_prefix + "test_procedure_prefix";
  var identifier_select                      = "#"           + identifier;

  function identifier_changed()
  {
    var identifier_field                       = document.getElementById(identifier);
    var high_level_requirements_field          = document.getElementById(high_level_requirements_prefix);
    var low_level_requirements_field           = document.getElementById(low_level_requirements_prefix);
    var model_file_prefix_field                = document.getElementById(model_file_prefix);
    var source_code_field                      = document.getElementById(source_code_prefix);
    var test_case_field                        = document.getElementById(test_case_prefix);
    var test_procedure_field                   = document.getElementById(test_procedure_prefix);
    var project_high_level_requirements_field  = document.getElementById(project_high_level_requirements_prefix);
    var project_low_level_requirements_field   = document.getElementById(project_low_level_requirements_prefix);
    var project_source_code_field              = document.getElementById(project_source_code_prefix);
    var project_model_file_field               = document.getElementById(project_model_file_prefix);
    var project_test_case_field                = document.getElementById(project_test_case_prefix);
    var project_test_procedure_field           = document.getElementById(project_test_procedure_prefix);
    var high_level_requirements_suffix         = project_high_level_requirements_field.value;
    var low_level_requirements_suffix          = project_low_level_requirements_field.value;
    var source_code_suffix                     = project_source_code_field.value;
    var model_file_suffix                      = project_model_file_field.value;
    var test_case_suffix                       = project_test_case_field.value;
    var test_procedure_suffix                  = project_test_procedure_field.value;

    if (high_level_requirements_suffix.search(/\-.+$/i) >= 0)
      high_level_requirements_suffix           = high_level_requirements_suffix.substring(high_level_requirements_suffix.search(/\-[^-]+$/i) + 1);

    if (low_level_requirements_suffix.search(/\-.+$/i) >= 0)
      low_level_requirements_suffix            = low_level_requirements_suffix.substring(low_level_requirements_suffix.search(/\-[^-]+$/i) + 1);

    if (source_code_suffix.search(/\-.+$/i) >= 0)
      source_code_suffix                       = source_code_suffix.substring(source_code_suffix.search(/\-[^-]+$/i) + 1);

    if (model_file_suffix.search(/\-.+$/i) >= 0)
      model_file_suffix                        =  model_file_suffix.substring(model_file_suffix.search(/\-[^-]+$/i) + 1);

    if (test_case_suffix.search(/\-.+$/i) >= 0)
      test_case_suffix                         = test_case_suffix.substring(test_case_suffix.search(/\-[^-]+$/i) + 1);

    if (test_procedure_suffix.search(/\-.+$/i) >= 0)
      test_procedure_suffix                    = test_procedure_suffix.substring(test_procedure_suffix.search(/\-[^-]+$/i) + 1);

    high_level_requirements_field.value        = identifier_field.value + '-' + high_level_requirements_suffix;
    low_level_requirements_field.value         = identifier_field.value + '-' + low_level_requirements_suffix;
    source_code_field.value                    = identifier_field.value + '-' + source_code_suffix;
    model_file_prefix_field.value              = identifier_field.value + '-' + model_file_suffix;
    test_case_field.value                      = identifier_field.value + '-' + test_case_suffix;
    test_procedure_field.value                 = identifier_field.value + '-' + test_procedure_suffix;
  }

  $(identifier_select).change(function()
  {
    identifier_changed();
  });

  $(":input").keydown(function (event) {
      if (event.keyCode == 112)
        validate();
      else if (event.keyCode == 113)
        window.location.assign(window.location.href.replace(/\/\d+\/edit$/, ''));
  }); 

  function validate()
  {
    var form                 = document.forms[0];
    var okay                 = validateForm();
    var messageText          = "";

    if (!okay)
      return(okay);

    if (okay)
    {
      form.submit();
    }
    else
    {
      message.value          = messageText;
      message.style.display  = "none";

      alert(messageText);
    }

    return(okay);
  }
</script>